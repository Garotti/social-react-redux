{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostForm/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatus","state","editMode","status","props","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","this","autoFocus","onChange","onBlur","onDoubleClick","React","Component","ProfileInfo","profile","className","s","content","descBlock","photos","large","src","alt","aboutMe","data","lookingForAJobDescription","Preloader","Post","item","message","like","maxLength","maxLengthCreator","MyPostsForm","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","PostReduxForm","reduxForm","form","MyPosts","postsData","posts","map","post","likeCount","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","autorizedUserId","history","push","profileUser","getStatus","compose","auth","getAuthUserData","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.92d30dce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2Io2G\",\"descBlock\":\"ProfileInfo_descBlock__2zXqS\",\"foto\":\"ProfileInfo_foto__2YAqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1JseI\",\"post_but\":\"MyPosts_post_but__2_xrj\",\"postsBlock\":\"MyPosts_postsBlock__2ifKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__1RpGJ\",\"post_but\":\"Post_post_but__2AAF6\",\"item\":\"Post_item__ihtu9\"};","import React from 'react';\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    };\n\n    activateEditMode = () => {\n        // setState асинхроний\n        this.setState({\n           editMode: true\n        });\n    };\n    deactivateEditMode = () => {\n        this.setState( {\n            editMode: false\n        });\n        this.props.updateStatus(this.state.status);\ndebugger;\n    };\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({state: this.props.status})\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.editMode\n                    ? <div>\n                        <span onDoubleClick={this.activateEditMode}>\n                            {this.state.status || this.props.status}\n                        </span>\n                      </div>\n                    : <div>\n                        <input value={this.state.status}\n                               autoFocus={true}\n                               onChange={this.onStatusChange}\n                               onBlur={this.deactivateEditMode}\n                              />\n                      </div>\n                }\n                <div><h2>{this.props.status}</h2></div>\n            </div>\n        )\n    }\n}\n\nexport default ProfileStatus;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n    return (\n        <div className={s.content}>\n            <div className={s.descBlock}>\n                {!profile.photos.large ? <div><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTkuXGpKBmltWiDRcpx7zrbSAbeBYnS_KQL4ItAAXn1t6RyRE0&s\" alt=\"ava\"/></div>\n                    : <img src={profile.photos.large} alt=\"ava\"/> }<br/>\n                <h4>{profile.aboutMe}</h4>\n                <ProfileStatus status={status.data} updateStatus={updateStatus}/>\n                <i>{profile.lookingForAJobDescription}</i>\n            </div>\n        </div>\n    )\n};\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css'\n\nconst Post = (props) => {\n\n\n    return (\n        <div className={s.item}>\n            <img src=\"http://nevendaar.com/_ph/50/2/966772563.jpg\" alt=\"avatar\"/>\n            {props.message}\n            <div>\n                <span>{props.like}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Post;","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\n\nexport const maxLength = maxLengthCreator(10);\n\nconst MyPostsForm = (props) => {\n    return (\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                <div>\n                    <Field placeholder={\"Write something\"}\n                           name={\"newPostText\"}\n                           component={Textarea}\n                           validate={[required, maxLength]}\n                    />\n                </div>\n                <div>\n                    <button>Add Post</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport const PostReduxForm = reduxForm({form: 'post'})(MyPostsForm);\n\nexport default MyPostsForm;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {PostReduxForm} from \"./MyPostForm/MyPostsForm\";\n\nconst MyPosts = (props) => {\n    const postsData = props.posts.map( post => {\n        return(\n            <Post message={post.message} like={post.likeCount}/>\n        )\n    });\n\n    const onSubmit = (values) => {\n        props.addPost(values.newPostText)\n    };\n\n    return (\n        <div className={s.postsBlock}>\n            My pots\n            <div>\n                <PostReduxForm onSubmit={onSubmit}/>\n            </div>\n            <div className={s.posts}>\n                {postsData}\n            </div>\n        </div>\n    );\n};\n\nexport default MyPosts;","import {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport connect from \"react-redux/es/connect/connect\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n};\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        },\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n\n    return (\n        <div>\n            <ProfileInfo profile={props.profile}\n                         status={props.status}\n                         updateStatus={props.updateStatus}\n            />\n            <MyPostsContainer/>\n        </div>\n    );\n};\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, profileUser, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId; // переданий в URL id\n        if (!userId) {\n            userId = this.props.autorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.profileUser(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            <div>\n                <Profile {...this.props}\n                         profile={this.props.profile}\n                         status={this.props.status}\n                         updateStatus={this.props.updateStatus}\n                />\n            </div>\n        );\n    }\n}\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    autorizedUserId: state.auth.userId,\n});\n\n\nexport default compose(connect(mapStateToProps,\n    {profileUser, getStatus, updateStatus,getAuthUserData}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}