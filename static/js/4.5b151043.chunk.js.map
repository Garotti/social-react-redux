{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/MessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","src","alt","message2","DialogItem","dialog","active","to","id","name","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElement","dialogs","map","key","messageElement","messages","res","isAuth","values","onSendNewMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,SAAW,0BAA0B,UAAY,6B,uFCoB9QC,EAlBC,SAACC,GAIb,OACI,6BACI,yBAAKC,UAAWC,IAAEC,SACd,yBAAKC,IAAI,mEAAmEC,IAAI,KAC/EL,EAAMG,SAEX,yBAAKF,UAAWC,IAAEI,UACd,yBAAKF,IAAI,mEAAmEC,IAAI,KAC/EL,EAAMG,W,OCFRI,EATI,SAACP,GAChB,OACI,yBAAKC,UAAWC,IAAEM,OAAS,IAAMN,IAAEO,QAC/B,kBAAC,IAAD,CAASC,GAAE,mBAAcV,EAAMW,KAAOX,EAAMY,KAA5C,O,yCCFNC,EAAeC,YAAiB,KAmBzBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAjBZ,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBD,KAAM,iBACNa,YAAa,wBAGxB,6BACI,oDCsBDC,EAjCC,SAAC1B,GAEb,IAAI2B,EAAQ3B,EAAM4B,YAGdC,EAAiBF,EAAMG,QAAQC,KAC/B,SAAAvB,GAAM,OAAI,kBAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAMoB,IAAKxB,EAAOG,GAAIA,GAAIH,EAAOG,QAEpEsB,EAAiBN,EAAMO,SAASH,KAAI,SAAAI,GACrC,OACI,kBAAC,EAAD,CAASxB,GAAIwB,EAAIxB,GAAIqB,IAAKG,EAAIxB,GAAIR,QAASgC,EAAIhC,aAQtD,OAAKH,EAAMoC,OAGP,yBAAKnC,UAAWC,IAAE4B,SACd,6BACKD,GAEL,yBAAK5B,UAAWC,IAAEgC,UACd,6BAAMD,GACN,kBAAClB,EAAD,CAAsBG,SAbd,SAACmB,GACjBrC,EAAMsC,iBAAiBD,EAAOE,qBAGR,kBAAC,IAAD,CAAW7B,GAAI,Y,yBCH9B8B,sBACXC,aAfkB,SAACd,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACc,GACtB,MAAO,CACHJ,iBAAmB,SAACC,GAChBG,EAASC,YAAmBJ,SAQpCK,IAFWJ,CAGbd","file":"static/js/4.5b151043.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"message2\":\"Dialogs_message2__10yUu\",\"secondman\":\"Dialogs_secondman__16QrD\"};","import React from 'react';\nimport s from '../Dialogs.module.css'\n\nconst Message = (props) => {\n\n\n\n    return (\n        <div>\n            <div className={s.message}>\n                <img src=\"https://i.kym-cdn.com/photos/images/original/001/008/986/45a.png\" alt=\"\"/>\n                {props.message}\n            </div>\n            <div className={s.message2}>\n                <img src=\"https://i.kym-cdn.com/photos/images/original/000/972/517/516.jpg\" alt=\"\"/>\n                {props.message}\n            </div>\n        </div>\n    )\n};\n\nexport default Message;","import React from 'react';\nimport s from '../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={`/dialogs/${props.id}`}>{props.name} </NavLink>\n        </div>\n\n    );\n};\n\nexport default DialogItem;","import {Field, reduxForm} from \"redux-form\";\nimport React from \"react\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength100]}\n                       name={\"newMessageBody\"}\n                       placeholder={'enter your message'}\n                />\n            </div>\n            <div>\n                <button>Add message</button>\n            </div>\n        </form>\n    )\n};\n\nexport const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\n\n","import React from 'react';\nimport s from './Dialogs.module.css';\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogsItem';\nimport {Redirect} from \"react-router-dom\";\nimport {AddMessageFormRedux} from \"./MessageForm/AddMessageForm\";\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    //--Отрисовка стейта\n    let dialogsElement = state.dialogs.map(\n        dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>\n    );\n    let messageElement = state.messages.map(res => {\n       return (\n           <Message id={res.id} key={res.id} message={res.message}/>\n       )\n    });//--\n\n    let addNewMessage = (values) => {\n        props.onSendNewMessage(values.newMessageBody)\n    };\n\n    if (!props.isAuth) return <Redirect  to={'/login'}/>;\n\n    return (\n        <div className={s.dialogs}>\n            <div>\n                {dialogsElement}\n            </div>\n            <div className={s.messages}>\n                <div>{messageElement}</div>\n                <AddMessageFormRedux  onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogs;","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport connect from \"react-redux/es/connect/connect\";\nimport React from \"react\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n};\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        onSendNewMessage:  (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n};\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}